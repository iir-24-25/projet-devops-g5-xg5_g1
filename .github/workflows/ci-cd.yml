name: CI/CD - Full Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    

jobs:
  build-and-test-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: Stock
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
    defaults:
      run:
        working-directory: ./BACKEND
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build backend
        run: mvn clean install -DskipTests

      - name: Run backend tests
        run: mvn test

  build-and-test-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./FRONDEND
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run frontend build
        run: npm run build

      - name: Run frontend tests
        run: npm run test

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Build backend Docker image
        run: docker build -t myapp-backend:latest ./BACKEND

      - name: Build frontend Docker image
        run: docker build -t myapp-frontend:latest ./FRONDEND

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v3

      - name: Deploy using Docker Compose
        run: |
          docker-compose -f docker-compose.prod.yml up -d

      - name: Print deployment status
        run: docker ps
